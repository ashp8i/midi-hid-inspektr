name: Lint and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # Allow manual triggering from GitHub Actions tab
  workflow_dispatch:

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies for Qt
      run: |
        sudo apt-get update
        # Updated package names for Ubuntu 24.04 (Noble)
        sudo apt-get install -y libgl1 libegl1 libxkbcommon-x11-0 libxcb-icccm4 \
          libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
          libxcb-xinerama0 libxcb-xkb1 xvfb
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest pytest-cov black
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Check formatting with black
      run: |
        black --check .
        
    - name: Format with black (if check fails)
      if: failure()
      run: |
        black .
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "Apply automatic code formatting with Black" || echo "No changes to commit"
        git push || echo "Could not push changes"
      
    - name: Test with pytest
      run: |
        # Create an __init__.py file in tests directory if it doesn't exist
        mkdir -p tests
        touch tests/__init__.py
        
        # Run tests with xvfb to provide virtual display for GUI tests
        xvfb-run -a pytest -v --collect-only
        xvfb-run -a pytest -v --cov=. --cov-report=xml
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false